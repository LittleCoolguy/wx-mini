<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qizegao.wxmini.db.dao.TbPermissionDao">
  <resultMap id="BaseResultMap" type="com.qizegao.wxmini.db.pojo.TbPermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="param_key" jdbcType="VARCHAR" property="paramKey" />
    <result column="param_value" jdbcType="VARCHAR" property="paramValue" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, param_key, param_value, `status`, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_config
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--查询某一个视频会议的所有成员是否是同一个部门-->
  <!--找到某一个视频会议的所有参与者，参与者所属部门去重，如果所有员工的部门相同，那么去重后的返回值为1-->
  <select id="searchMeetingMembersInSameDept" parameterType="String" resultType="boolean">
    SELECT
      IF(COUNT(DISTINCT u.dept_id)=1,TRUE,FALSE ) AS bool
    FROM tb_meeting m
           JOIN tb_user u ON JSON_CONTAINS ( m.members, CAST( u.id AS CHAR ) )
    WHERE m.uuid=#{uuid} AND u.status = 1
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.qizegao.wxmini.db.pojo.TbPermission" useGeneratedKeys="true">
    insert into sys_config (param_key, param_value, `status`, 
      remark)
    values (#{paramKey,jdbcType=VARCHAR}, #{paramValue,jdbcType=VARCHAR}, #{status,jdbcType=BOOLEAN}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qizegao.wxmini.db.pojo.TbPermission" useGeneratedKeys="true">
    insert into sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paramKey != null">
        param_key,
      </if>
      <if test="paramValue != null">
        param_value,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paramKey != null">
        #{paramKey,jdbcType=VARCHAR},
      </if>
      <if test="paramValue != null">
        #{paramValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BOOLEAN},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qizegao.wxmini.db.pojo.TbPermission">
    update sys_config
    <set>
      <if test="paramKey != null">
        param_key = #{paramKey,jdbcType=VARCHAR},
      </if>
      <if test="paramValue != null">
        param_value = #{paramValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qizegao.wxmini.db.pojo.TbPermission">
    update sys_config
    set param_key = #{paramKey,jdbcType=VARCHAR},
      param_value = #{paramValue,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BOOLEAN},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--更新会议表的工作流实例id-->
  <update id="updateMeetingInstanceId" parameterType="HashMap">
    UPDATE tb_meeting
    SET instance_id=#{instanceId}
    WHERE uuid=#{uuid}
  </update>
</mapper>