<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qizegao.wxmini.db.dao.TbUserDao">
  <resultMap id="BaseResultMap" type="com.qizegao.wxmini.db.pojo.TbUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="param_key" jdbcType="VARCHAR" property="paramKey" />
    <result column="param_value" jdbcType="VARCHAR" property="paramValue" />
    <result column="status" jdbcType="BOOLEAN" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, param_key, param_value, `status`, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_config
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--判断User表中是否已经存在超级管理员-->
  <select id="haveRootUser" resultType="java.lang.Boolean">
    SELECT IF(COUNT(*),TRUE,FALSE) FROM tb_user WHERE root=1;
  </select>

  <!--根据openId查询用户id-->
  <select id="searchIdByOpenId" resultType="java.lang.Integer">
    SELECT id FROM tb_user WHERE open_id=#{openId} AND status = 1;
  </select>

  <!--向User表中插入数据-->
  <insert id="insert" parameterType="HashMap">
    INSERT INTO tb_user
    SET
    <if test="openId!=null">
      open_id = #{openId},
    </if>
    <if test="nickname!=null">
      nickname = #{nickname},
    </if>
    <if test="photo!=null">
      photo = #{photo},
    </if>
    <if test="name!=null">
      name = #{name},
    </if>
    <if test="sex!=null">
      sex = #{sex},
    </if>
    <if test="tel!=null">
      tel = #{tel},
    </if>
    <if test="email!=null">
      email=#{email},
    </if>
    <if test="hiredate!=null">
      hiredate = #{hiredate},
    </if>
    role = #{role},
    root = #{root},
    <if test="deptName!=null">
      dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
    </if>
    status = #{status},
    create_time = #{createTime}
  </insert>

  <!--根据用户id查询用户的权限列表-->
  <select id="searchUserPermissions" parameterType="int" resultType="String">
    SELECT DISTINCT p.permission_name
    FROM tb_user u
           JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
           JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
    WHERE u.id=#{userId} AND u.status=1;
  </select>

  <!--根据用户的id，查询用户的信息-->
  <select id="searchById" resultType="com.qizegao.wxmini.db.pojo.TbUser">
    SELECT
      id, open_id, nickname, photo, name, sex, tel, role, root, dept_id, status, create_time
    FROM tb_user WHERE id=#{userId} AND status=1
  </select>

  <!--根据用户id查询用户名和部门名-->
  <select id="searchNameAndDept" resultType="java.util.HashMap">
    SELECT u.name, d.dept_name
    FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
    WHERE u.id = #{userId} AND u.status = 1
  </select>

  <!--根据用户id查询用户的姓名、头像、部门，用于显示在我的页面上-->
  <select id="searchUserSummary" resultType="java.util.HashMap">
    SELECT u.name, u.photo, d.dept_name AS deptName
    FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
    WHERE u.id=#{userId} AND u.status = 1
  </select>

  <!--查询不同部门的员工信息-->
  <!--先根据部门排序，相同部门的员工根据员工id排序-->
  <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
    SELECT
    d.id AS deptId,
    d.dept_name AS deptName,
    u.id AS userId,
    u.name
    FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
    WHERE u.status=1
    <if test="keyword!=null">
      AND u.name LIKE '%${keyword}%'
    </if>
    ORDER BY d.id, u.id;
  </select>

  <!--从user表中查询多个用户的id、姓名、头像-->
  <select id="searchMembers" parameterType="list" resultType="HashMap">
    SELECT id,name,photo
    FROM tb_user
    WHERE status = 1
    AND id IN

    <foreach collection="list" item="one" separator="," open="(" close=")">
      #{one}
    </foreach>
  </select>

  <!--根据用户的id查询用户的信息和部门信息-->
  <select id="searchUserInfo" parameterType="int" resultType="HashMap">
    SELECT
    u.open_id AS openId,
    u.nickname,
    u.name,
    u.photo,
    u.sex,
    u.tel,
    u.email,
    d.dept_name AS dept,
    u.hiredate,
    CASE u.status
    WHEN 1 THEN "在职"
    WHEN 2 THEN "离职"
    END AS status,
    ( SELECT GROUP_CONCAT( role_name separator "，" ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS roles
    FROM tb_user u
    LEFT JOIN tb_dept d ON u.dept_id = d.id
    WHERE u.id = #{userId} AND u.status = 1
  </select>

  <!--根据某一个用户的id，返回此用户所属部门的部门经理的id-->
  <select id="searchDeptManagerId" parameterType="int" resultType="int">
    SELECT
    u2.id
    FROM tb_user u1 JOIN tb_user u2 ON u1.dept_id=u2.dept_id
    JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
    WHERE u1.id=#{id} AND r.id=2 AND u1.status = 1 AND u2.status = 1
  </select>

  <!--查询总经理的id-->
  <select id="searchGmId" resultType="int">
    SELECT
    u.id
    FROM tb_user u
    JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
    WHERE r.id=1 AND u.status = 1
  </select>

  <!--根据用户的id查询用户的头像和姓名-->
  <select id="selectUserPhotoAndName" parameterType="list" resultType="HashMap">
    SELECT
    id,name,photo
    FROM tb_user
    WHERE status = 1 AND id IN
    <foreach collection="list" open="(" close=")" item="one" separator=",">
      #{one}
    </foreach>
  </select>

  <!--查询用户邮箱-->
  <select id="searchMemberEmail" parameterType="int" resultType="String">
    SELECT email FROM tb_user WHERE id=#{id} AND status = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_config
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.qizegao.wxmini.db.pojo.TbUser" useGeneratedKeys="true">
    insert into sys_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paramKey != null">
        param_key,
      </if>
      <if test="paramValue != null">
        param_value,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paramKey != null">
        #{paramKey,jdbcType=VARCHAR},
      </if>
      <if test="paramValue != null">
        #{paramValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BOOLEAN},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qizegao.wxmini.db.pojo.TbUser">
    update sys_config
    <set>
      <if test="paramKey != null">
        param_key = #{paramKey,jdbcType=VARCHAR},
      </if>
      <if test="paramValue != null">
        param_value = #{paramValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BOOLEAN},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qizegao.wxmini.db.pojo.TbUser">
    update sys_config
    set param_key = #{paramKey,jdbcType=VARCHAR},
      param_value = #{paramValue,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BOOLEAN},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>